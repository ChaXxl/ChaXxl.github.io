import{_ as l,X as t,Y as p,Z as s,$ as a,a0 as e,a2 as i,F as c}from"./framework-c5cbeb87.js";const o={},d=i(`<h1 id="ubuntu配置" tabindex="-1"><a class="header-anchor" href="#ubuntu配置" aria-hidden="true">#</a> Ubuntu配置</h1><h2 id="命令" tabindex="-1"><a class="header-anchor" href="#命令" aria-hidden="true">#</a> 命令</h2><h3 id="ls-命令" tabindex="-1"><a class="header-anchor" href="#ls-命令" aria-hidden="true">#</a> ls 命令</h3><ol><li><p>-a</p><p>列出所有</p></li><li><p>-l</p><p>.</p></li><li><p>-h</p><p>增加可读性</p></li><li><p>-R</p><p>递归</p></li><li><p>-Q</p><p>文件用双引号打印出来</p></li></ol><h3 id="echo-命令" tabindex="-1"><a class="header-anchor" href="#echo-命令" aria-hidden="true">#</a> echo 命令</h3><ol><li><p>显示字符串</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> Hello World
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Hello World&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>显示转义字符。使用 <code>\\</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token entity" title="\\&quot;">\\&quot;</span>Hello World!<span class="token entity" title="\\&quot;">\\&quot;</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>显示变量。使用 <code>$</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token environment constant">$PATH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>显示换行/不换行。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;Hello <span class="token entity" title="\\n">\\n</span> World&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;Hello <span class="token entity" title="\\c">\\c</span> World&quot;</span> 不换行
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>显示原样字符串</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;$PATH&#39;</span><span class="token operator">=</span><span class="token environment constant">$PATH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>显示命令结果</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">date</span><span class="token variable">\`</span></span> <span class="token variable"><span class="token variable">\`</span><span class="token function">time</span><span class="token variable">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="cd-命令" tabindex="-1"><a class="header-anchor" href="#cd-命令" aria-hidden="true">#</a> cd 命令</h3><p><code>Change Directory</code></p><ol><li><p>~</p><p>表示当前用户</p></li></ol><h3 id="head-命令" tabindex="-1"><a class="header-anchor" href="#head-命令" aria-hidden="true">#</a> head 命令</h3><ol><li><p>-c n</p><p>显示头部的指定 n 个字符</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">head</span> <span class="token parameter variable">-c</span> <span class="token number">2</span> hello.txt 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>-n x</p><p>显示头部的指定的 x 行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">head</span> <span class="token parameter variable">-n</span> <span class="token number">2</span> hello.txt 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>-v</p><p>显示文件名</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">head</span> <span class="token parameter variable">-v</span> <span class="token parameter variable">-n</span> <span class="token number">2</span> hello.txt 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>-q</p><p>不显示文件名（默认就是带 -q）</p></li></ol><h3 id="tail-命令" tabindex="-1"><a class="header-anchor" href="#tail-命令" aria-hidden="true">#</a> tail 命令</h3><ol><li><p>-f</p><p>可以不断地更新尾部内容</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tail</span> <span class="token parameter variable">-f</span> hello.txt 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>-n x</p><p>显示尾部 x 行的内容</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tail</span> <span class="token parameter variable">-n</span> <span class="token number">2</span> hello.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>-c n</p><p>显示头部的指定 n 个字符</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tail</span> <span class="token parameter variable">-c</span> <span class="token number">20</span> hello.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="ps-命令" tabindex="-1"><a class="header-anchor" href="#ps-命令" aria-hidden="true">#</a> ps 命令</h3><ol><li><p>-AL</p><p>显示所有进程的详情和进程名称</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ps</span> <span class="token parameter variable">-AL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>-aux</p><p>显示所有进程和其启动命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ps</span> <span class="token parameter variable">-aux</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img-blog.csdnimg.cn/direct/714e362a2a654d88b259c4fe97453d6a.png" alt="image-20231209143602908" loading="lazy"></p></li></ol><h3 id="cp-命令" tabindex="-1"><a class="header-anchor" href="#cp-命令" aria-hidden="true">#</a> cp 命令</h3><ol><li><p>-a</p><p>带属性复制。通常用在复制目录时，它保留链接、文件属性，并复制目录下的所有内容，其作用等于 dpR 参数组合。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>-d</p><p>复制时保留链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>-f</p><p>强制覆盖。覆盖已经存在的目标文件而不给出提示</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>-p</p><p>带权限复制。如修改时间、访问权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>-r</p><p>文件夹复制</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>-l</p><p>创建链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="rm-命令" tabindex="-1"><a class="header-anchor" href="#rm-命令" aria-hidden="true">#</a> rm 命令</h3><ol><li><p>-i</p><p>删除确认</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>-f</p><p>强制删除</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>-r</p><p>目录删除</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="chmod" tabindex="-1"><a class="header-anchor" href="#chmod" aria-hidden="true">#</a> chmod</h3><p>777 (111 111 111)</p><p>当前用户、当前用户组、其它用户。读、写、执行</p><h3 id="解压命令" tabindex="-1"><a class="header-anchor" href="#解压命令" aria-hidden="true">#</a> 解压命令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">1</span>、.tar 用 <span class="token function">tar</span> –xvf 解压
<span class="token number">2</span>、.gz 用 <span class="token function">gzip</span> -d或者gunzip 解压
<span class="token number">3</span>、.tar.gz 和.tgz 用 <span class="token function">tar</span> –xzf 解压
<span class="token number">4</span>、.bz2 用 <span class="token function">bzip2</span> -d或者用bunzip2 解压
<span class="token number">5</span>、.tar.bz2用tar –xjf 解压
<span class="token number">6</span>、.Z 用 uncompress 解压
<span class="token number">7</span>、.tar.Z 用tar –xZf 解压
<span class="token number">8</span>、.rar 用 <span class="token function">unrar</span> e解压
<span class="token number">9</span>、.zip 用 <span class="token function">unzip</span> 解压
<span class="token number">10</span>、tar.xz <span class="token function">tar</span> <span class="token parameter variable">-xvf</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;br/&gt;&lt;br/&gt;</code></p><h3 id="ssh-免密登录" tabindex="-1"><a class="header-anchor" href="#ssh-免密登录" aria-hidden="true">#</a> SSH 免密登录</h3><ol><li><p>首先在本机生成公钥和私钥</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-kegen <span class="token parameter variable">-t</span> rsa
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>在远程服务器上也生成公钥和私钥</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-kegen <span class="token parameter variable">-t</span> rsa
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>在服务器上, 将主机的公钥复制到 <code>~/.ssh/authorized_keys</code>文件中</p></li></ol><p><code>&lt;br/&gt;&lt;br/&gt;</code></p><h3 id="上传下载文件" tabindex="-1"><a class="header-anchor" href="#上传下载文件" aria-hidden="true">#</a> 上传下载文件</h3><h4 id="上传" tabindex="-1"><a class="header-anchor" href="#上传" aria-hidden="true">#</a> 上传</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> 文件路径 目的地用户名@目的地ip:目的地路径
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span>     <span class="token function">file</span>    user@ip:/directory      <span class="token comment">##上传文件</span>
<span class="token function">scp</span> <span class="token parameter variable">-r</span>  <span class="token function">dir</span> user@ip:/directory          <span class="token comment">##长传目录</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br><h4 id="下载" tabindex="-1"><a class="header-anchor" href="#下载" aria-hidden="true">#</a> 下载</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span>     user@ip:/filename   /direcotry  <span class="token comment">##下载文件</span>
<span class="token function">scp</span> <span class="token parameter variable">-r</span>  user@ip:/directory  /direcotry  <span class="token comment">##下载目录</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> 远程服务器用户名@远程服务器ip:远程文件路径 本地存放路径
<span class="token function">scp</span> <span class="token parameter variable">-r</span> 远程服务器用户名@远程服务器ip:远程文件路径 本地存放路径
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;br/&gt;&lt;br/&gt;</code></p><h2 id="一、-linux-开发入门" tabindex="-1"><a class="header-anchor" href="#一、-linux-开发入门" aria-hidden="true">#</a> 一、 Linux 开发入门</h2><h3 id="开发环境搭建" tabindex="-1"><a class="header-anchor" href="#开发环境搭建" aria-hidden="true">#</a> 开发环境搭建</h3><h4 id="gcc-安装" tabindex="-1"><a class="header-anchor" href="#gcc-安装" aria-hidden="true">#</a> gcc 安装</h4><br><h4 id="ssh-服务安装" tabindex="-1"><a class="header-anchor" href="#ssh-服务安装" aria-hidden="true">#</a> ssh 服务安装</h4><br><h3 id="linux-标准库函数" tabindex="-1"><a class="header-anchor" href="#linux-标准库函数" aria-hidden="true">#</a> Linux 标准库函数</h3><h4 id="字符串函数" tabindex="-1"><a class="header-anchor" href="#字符串函数" aria-hidden="true">#</a> 字符串函数</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ctype.h&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><p>测试字符是否为英文或数字</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">isalnum</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>测试字符是否是英文字母</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">isalpha</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>测试字符是否为 ASCII 码字符</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">isascii</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>测试字符是否为空格字符</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">isblank</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>测试字符是否为 ASCII 码的控制字符</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">iscntrl</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>测试字符是否为阿拉伯数字</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">isdigit</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>测试字符是否为可打印字符</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">isgraph</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>测试字符是否为小写英文字母</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">islower</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>测试字符是否为可打印字符</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">isprint</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>测试字符是否为空格字符</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">isspace</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>测试字符是否为标点符号或特殊符号</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">ispunct</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>测试字符是否为大写英文字母</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">issuper</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>测试字符是否为 16 进制数字</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">isxdigit</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><br><h4 id="数据转换函数" tabindex="-1"><a class="header-anchor" href="#数据转换函数" aria-hidden="true">#</a> 数据转换函数</h4><div class="language-C line-numbers-mode" data-ext="C"><pre class="language-C"><code>#include &lt;stdlib.h&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><p>将字符串转换为浮点型数</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">double</span> <span class="token function">atof</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> str<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>将字符串转换为整型数</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">atoi</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> str<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>将字符串转换成长整型数</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">long</span> <span class="token keyword">int</span> <span class="token function">atol</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> str<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>将字符串转换成 64 位整数(C++11)</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token keyword">int</span> <span class="token function">atoll</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> str<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>将字符串转换成整数</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">long</span> <span class="token keyword">int</span> <span class="token function">strtol</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> str<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span> endptr<span class="token punctuation">,</span> <span class="token keyword">int</span> base<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>base 指进制: 2、8、10</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">strtoll</span><span class="token punctuation">(</span><span class="token string">&quot;1234567891000&quot;</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// 示例 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">char</span> <span class="token operator">*</span>pEnd<span class="token punctuation">;</span>
<span class="token function">strtoll</span><span class="token punctuation">(</span><span class="token string">&quot;123456789abc&quot;</span><span class="token punctuation">,</span> pEnd<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// pEnd 将指向 abc</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>将字符串转换成先符号整数</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token keyword">int</span> <span class="token function">strtoul</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> str<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>endptr<span class="token punctuation">,</span> <span class="token keyword">int</span> base<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>将字符串转换成长整数(C++11)</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token keyword">int</span> <span class="token function">strtoll</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> str<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>endptr<span class="token punctuation">,</span> <span class="token keyword">int</span> base<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>将字符串转换成无符号长整数(C++11)</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token keyword">int</span> <span class="token function">strtoull</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>endptr<span class="token punctuation">,</span> <span class="token keyword">int</span> base<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>将字符串转换成浮点数(C++11)</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">float</span> <span class="token function">strtof</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>endptr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>将字符串转换成双精度数</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">double</span> <span class="token function">strtod</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>endptr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>将字符串转换成长双精度数(C++11)</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">long</span> <span class="token keyword">double</span> <span class="token function">strdold</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>endptr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br></li><li><p>将浮点型数增加的成字符串</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">evt</span><span class="token punctuation">(</span><span class="token keyword">double</span> value<span class="token punctuation">,</span> <span class="token keyword">int</span> ndigit<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>decpt<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>sign<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Value: 输入要转换的数</p><p>ndigit: 指的是全部的有效位数</p><p>decpt: 返回小数点的下标</p><p>sign: 返回符号。正数为0, 负数为1</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> decpt<span class="token punctuation">,</span> sign<span class="token punctuation">;</span>
<span class="token keyword">char</span> <span class="token operator">*</span>res <span class="token operator">=</span> <span class="token function">evt</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">123.456789</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>decpt<span class="token punctuation">,</span> <span class="token operator">&amp;</span>sign<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// res: 123456789。decpt: 3。sign: 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>将浮点型数转换为字符串</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">fcvt</span><span class="token punctuation">(</span><span class="token keyword">double</span> value<span class="token punctuation">,</span> <span class="token keyword">int</span> ndigit<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>decpt<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>sign<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>ndigit: 小数点之后的有效位</p></li><li><p>将浮点型数转换为字符串</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">gcvt</span><span class="token punctuation">(</span><span class="token keyword">double</span> value<span class="token punctuation">,</span> <span class="token keyword">int</span> ndigit<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>buf<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>buf 和返回值是一样的</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token number">1238</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">char</span> <span class="token operator">*</span>res <span class="token operator">=</span> <span class="token function">gcvt</span><span class="token punctuation">(</span><span class="token number">0.123</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// res: 0.123</span>
<span class="token keyword">char</span> <span class="token operator">*</span>res <span class="token operator">=</span> <span class="token function">gcvt</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.456</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// res: -0.456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><br><h4 id="格式化输入输出函数" tabindex="-1"><a class="header-anchor" href="#格式化输入输出函数" aria-hidden="true">#</a> 格式化输入输出函数</h4><ol><li><p>格式化输出数据</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>格式化输出数据(可变长)</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">vprintf</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">,</span> va_list arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdarg.h&gt;</span></span>

<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	va_list ap<span class="token punctuation">;</span>
    <span class="token function">va_start</span><span class="token punctuation">(</span>ap<span class="token punctuation">,</span> format<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">vprintf</span><span class="token punctuation">(</span>format<span class="token punctuation">,</span> ap<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">va_end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>格式化字符串输入</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>空格是默认的分隔符</p></li><li><p>格式化字符串复制</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">,</span> <span class="token class-name">size_t</span> size<span class="token punctuation">,</span> cosnt <span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>格式化字符串输入</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">sscanf</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">,</span> cosnt <span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>格式化字符串复制</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">vsnprintf</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>s<span class="token punctuation">,</span> <span class="token class-name">size_t</span> n<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">,</span> va_list arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">vsprintf</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">,</span> va_list arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>格式化字符串输入</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">vsscanf</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>s<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">,</span> va_list arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>格式化输出至文件</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">vfprintf</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span>stream<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">,</span> va_lit arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>格式化文件字符串输入</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">vfscanf</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span>stream<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">,</span> va_list arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>格式化输出数据至文件</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">fprintf</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span>stream<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>format<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><br><h4 id="权限控制函数" tabindex="-1"><a class="header-anchor" href="#权限控制函数" aria-hidden="true">#</a> 权限控制函数</h4><h5 id="linux-权限说明" tabindex="-1"><a class="header-anchor" href="#linux-权限说明" aria-hidden="true">#</a> Linux 权限说明</h5><p>出于在 Linux 一切皆文件，所以这些权限对进程、内存都是有效的</p><ul><li>设置用户权限: S 提权和降权</li><li>设置组权限: s</li><li>仅所有者可删除权限: t</li><li>读取权限：r(Read) 4(100)</li><li>写入权限：w(Write) 2(010)</li><li>执行权限：x(Execute) 1(001)</li></ul><p>所有者</p><p>所在组</p><p>其它组</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>drwxr-xr-x

d: 表示这是个目录
rwx: 所有者的权限
r-x: 所在组的权限
r-x: 其它组的权限
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p>取得有效的用户识别码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">uid_t</span> <span class="token function">geteuid</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p><code>真实的用户 r</code>：当下程序所拥有的用户状态</p></li><li><p>有效的用户 e：程序启动时所拥有的用户状态</p></li><li><p>0: root</p></li><li><p>1000~10000(不包含10000):system、数据库、服务 tty 保留的用户</p></li><li><p>10000及以上: 其它用户</p><p>Android 每个应用会分配一个用户（系统应用例外）</p></li></ul></li><li><p>取得真实的用户识别码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">uid_t</span> <span class="token function">getuid</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>取得真实的组织识别码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">gid_t</span> <span class="token function">getgid</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>设置真实的用户识别码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">setuid</span><span class="token punctuation">(</span><span class="token class-name">uid_t</span> uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>设置有效的用户识别码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">seteuid</span><span class="token punctuation">(</span><span class="token class-name">uid_t</span> uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>设置真实及有效的用户识别码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">setreuid</span><span class="token punctuation">(</span><span class="token class-name">uid_t</span> uid<span class="token punctuation">,</span> <span class="token class-name">uid_t</span> euid<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>设置真实及有效的组识别码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">setregid</span><span class="token punctuation">(</span><span class="token class-name">gid_t</span> rgid<span class="token punctuation">,</span> <span class="token class-name">gid_t</span> egid<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>设置有效的组识别码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">setegid</span><span class="token punctuation">(</span><span class="token class-name">gid_t</span> egid<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>设置真实的组识别码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">setgid</span><span class="token punctuation">(</span><span class="token class-name">gid_t</span> gid<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建会话 ID (只能是子进程调用):</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">pid_t</span> <span class="token function">setsid</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><br><h4 id="i-o-函数" tabindex="-1"><a class="header-anchor" href="#i-o-函数" aria-hidden="true">#</a> I/O 函数</h4><blockquote><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/stat.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fcntl.h&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p>打开文件</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>pathname<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span> <span class="token class-name">mode_t</span> mode<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>flags:</p><ul><li>O_RDONLY: 只读</li><li>O_WRONLY: 只写</li><li>O_RDWR: 读、写</li><li>O_CREAT: 若文件不存在，则创建它，需要使用 mode 选项。来指明新文件的访问权限</li><li>O_APPEND: 追加写</li></ul><p>mode:</p><ul><li>S_IRUSR、S_IWUSR、S_IXUSR 所有者的读、写、执行</li><li>S_IRGRP、S_IWGRP、S_IXGRP 所属组的读、写、执行</li><li>S_IROTH、S_IWOTH、S_IXOTH 其它用户的读、写、执行</li></ul></li><li><p>创建文件</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>pathname<span class="token punctuation">,</span> <span class="token class-name">mode_t</span> mode<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></blockquote><blockquote><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><p>从打开的文件读取文件数据</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">ssize_t</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span> <span class="token class-name">size_t</span> count<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>从打开的文件写入文件数据</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">ssize_t</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span> <span class="token class-name">size_t</span> count<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>关闭文件</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>复制文件描述符</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">dup</span><span class="token punctuation">(</span><span class="token keyword">int</span> oldfd<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>复制文件描述符到新的文件描述符中去</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">dup2</span><span class="token punctuation">(</span><span class="token keyword">int</span> oldfd<span class="token punctuation">,</span> <span class="token keyword">int</span> newfd<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>文件控制</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">fcntl</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">int</span> cmd<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment">/* arg */</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>文件数据同步(将缓存中的数据写入到磁盘)</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">fsync</span><span class="token punctuation">(</span>ind fd<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></blockquote><blockquote><p><mark>文件读写位置修改</mark></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>

<span class="token class-name">off_t</span> <span class="token function">lseek</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token class-name">off_t</span> offset<span class="token punctuation">,</span> <span class="token keyword">int</span> whence<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>whence:</p><ul><li><p>SEEK_SET: 参数 offset 即为新的读写位置</p></li><li><p>SEEK_CUR: 以目前的读写位置往后增加 offset 个位移量</p></li><li><p>SEEK_END 将读写位置指向文件尾后再增加 offset 个位移量。</p><p>当 whence 值为 SEEK_CUR 或 SEEK_END 时，offset 可以为负值</p></li></ul></blockquote><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span>

<span class="token comment">// 创建临时文件--文件是临时的，不保证数据长期有效</span>
<span class="token keyword">int</span> <span class="token function">mkstemp</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>template<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// template: 前缀XXXXXX</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><mark>文件锁操作</mark></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">flock</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">int</span> operation<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>operation:</p><ul><li>LOCK_SH: 建立共享锁定。多个进程可同时对同一个文件作共享锁定</li><li>LOCK_EX: 建立互斥锁定。一个文件同时只有一个互斥锁定</li><li>LOCK_UN: 解除文件锁定状态。文件被关闭时自动解锁</li><li>LOCK_NB: NoneBlock 无法建立锁定时，此操作可不被阻断，马上返回进程。通常与 LOCK_SH 或 LOCK_EX 做 OR(|) 组合</li></ul></blockquote><blockquote><p><mark>文件控制 (打开、关闭、读取、写入、控制)</mark></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fcntl.h&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">fcntl</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">int</span> cmd<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token comment">/* arg */</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">fcntl</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">int</span> cmd<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">fcntl</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">int</span> cmd<span class="token punctuation">,</span> <span class="token keyword">long</span> arg<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">fcntl</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">int</span> cmd<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">flock</span> <span class="token operator">*</span>lock<span class="token punctuation">)</span> <span class="token comment">// ==&gt; F_GETLK F_SETLK</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>cmd:</p><ul><li>F_DUPDF: 用来查找大于或等于参数 arg 的最小且仍未使用的文件描述符，并且复制参数 fd 的文件描述符。执行成功则返回新复制的文件描述符。新描述符与 fd 共享同一文件表项，但是新描述符有它自己的一套文件描述符标志，其中 FD_CLOEXEC 文件描述符标志被清除</li><li>F_GETDF: 取得 close-on-exec 标志。若此标志的 FD_CLOEXEC 位为 0，代表在调用 exec() 相关函数时文件将不会关闭</li><li>F_GETFL: FL(Flags) 取得文件描述符状态标志，此标志为 open() 的参数 flags。</li><li>F_SETFL: 设置文件描述符状态标志，参数 arg 为新标志，但只允许 O_APPEND、O_NONBLOCK、O_ASYNC 位的改变，其它位的改变将不受影响</li><li>F_GETLK: LK(Lock) 取得文件锁定的状态</li><li>F_SETLK: 设置文件锁定的状态。此时 flock 结构的 l_type 值必须是 F_RDLCK、F_WRLCK 或 F_UNLCK。如果无法建立锁定，则返回 -1，错误代码为 EACCES 或 EAGAIN</li><li>F_SETLKW(wait)、F_SETLK 作用相同，但是无法建立锁定时，此调用会一直等到锁定动作成功为止。若在等待锁定的过程中被信号中断时，会立即返回 -1，错误代码为 EINTR</li></ul></blockquote><p><code>&lt;br/&gt;</code></p><h4 id="进程控制函数" tabindex="-1"><a class="header-anchor" href="#进程控制函数" aria-hidden="true">#</a> 进程控制函数</h4><blockquote><ol><li><p>执行文件</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">execl</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>path<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>arg<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">execlp</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>file<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>arg<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">execle</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>path<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>arg<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token keyword">const</span> evnp<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">execvp</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>file<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span> <span class="token keyword">const</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">execve</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>filename<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token keyword">const</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span> <span class="token keyword">const</span> envp<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//内核级别调用</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>l: 进程执行的参数, 以可变参数的形式给出, 这些参数以 NULL 为最后一个参数</li><li>p: exec 会将当前的 PATH 作为一个参考环境变量, 比如 file 不用写绝对路径,可以用相对路径</li><li>e: 进程函数会需要用户来设置这个环境变量 evnp</li><li>v: 进程函数会用参数数组来传递 argv, 数组最后一个成员需要是 NULL</li></ul></li><li><p>建立一个新进程</p></li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">pid_t</span> <span class="token function">fork</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>pid_t:</p><ul><li>大于 0 的数, 此时就是父进程</li><li>等于 0 的数, 此时就是子进程</li><li>小于 0 的数, 表示创建失败</li></ul><ol start="3"><li>以异常方式结束进程</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">abort</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>若测试的条件不成立则终止进程</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;assert.h&gt;</span></span>
<span class="token keyword">void</span> <span class="token function">assert</span><span class="token punctuation">(</span><span class="token keyword">int</span> expression<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// expression 不成立才触发</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>正常结束进程</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token keyword">int</span> status<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="6"><li>设置程序正常结束前调用的函数</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">atexit</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">(</span><span class="token operator">*</span>func<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置程序正常结束前调用的函数</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">on_exit</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>function<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="7"><li>结束进程执行</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">_exit</span><span class="token punctuation">(</span><span class="token keyword">int</span> status<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 直接结束，不会触发其它的</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><blockquote><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;setjmp.h&gt;</span></span>

jmp_buf jmpbuf<span class="token punctuation">;</span>	<span class="token comment">// 建议设置成全局变量</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p>保存目前堆栈环境</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">setjmp</span><span class="token punctuation">(</span>jmp_buf environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>jmp_buf: 存储的是寄储器信息</p></li><li><p>跳转到原先 setjmp 保存的堆栈环境</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">longjmp</span><span class="token punctuation">(</span>jmp_buf environment<span class="token punctuation">,</span> <span class="token keyword">int</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>改变进程优先顺序: 跳转到原先 sigsetjmp 保存的堆栈环境</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">siglongjmp</span><span class="token punctuation">(</span>sigjmp_buf env<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>sigjmp_buf 除了缓存寄存器，还会缓存上下文（堆栈、当前的寄存器、当前的状态、下一条指令位置...）</p></li><li><p>保存目前堆栈环境</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">sigsetjmp</span><span class="token punctuation">(</span>sigjmp_buf env<span class="token punctuation">,</span> <span class="token keyword">int</span> savemask<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><p>作用是可以实现异常捕获、逆向中拿到上下文进行修改某些东西</p></blockquote><blockquote><ol><li><p>取得进程组识别码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">pid_t</span> <span class="token function">getpgid</span><span class="token punctuation">(</span><span class="token class-name">pid_t</span> pid<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>取得当前进程组识别码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">pid_t</span> <span class="token function">getpgrp</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>取得进程识别码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">pid_t</span> <span class="token function">getpid</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>取得父进程的进程识别码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">pid_t</span> <span class="token function">getppid</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>取得程序进程执行优先权</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/resource.h&gt;</span></span>
            
<span class="token keyword">int</span> <span class="token function">getpriority</span><span class="token punctuation">(</span><span class="token keyword">int</span> which<span class="token punctuation">,</span> <span class="token keyword">int</span> who<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></blockquote><blockquote><ol><li><p>设置进程组识别码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">setpgid</span><span class="token punctuation">(</span><span class="token class-name">pid_t</span> pid<span class="token punctuation">,</span> <span class="token class-name">pid_t</span> pgid<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>设置进程组识别码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">setpgrp</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>设置程序进程执行优先权</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">setpriority</span><span class="token punctuation">(</span><span class="token keyword">int</span> which<span class="token punctuation">,</span> <span class="token keyword">int</span> who<span class="token punctuation">,</span> <span class="token keyword">int</span> prio<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>改变进程优先级</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">nice</span><span class="token punctuation">(</span><span class="token keyword">int</span> inc<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><p>注：修改优先级需要权限，一般是有效用户的权限（即启动程序的那个用户）</p></blockquote><blockquote><ol><li><p>执行 shell 命令</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>等待<strong>子</strong>进程中断或结束, 一般和 fork 配套使用</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/wait.h&gt;</span></span>
            
<span class="token keyword">int</span> <span class="token function">wait</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
            
<span class="token class-name">pid_t</span> <span class="token function">waitpid</span><span class="token punctuation">(</span><span class="token class-name">pit_t</span> pid<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>status<span class="token punctuation">,</span> <span class="token keyword">int</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>status:</p><ul><li><p>WIFEXITED: if exited</p></li><li><p>WIFSIGNALED</p></li><li><p>WIFSTOPPED</p></li><li><p>WEXITSTATUS</p></li><li><p>WTERMSIG</p></li><li><p>WSTOPSIG</p></li></ul><p>options:</p><ul><li>WNOHANG: no hang 非阻塞</li><li>WUNTRACED: under traced 被调试</li><li>WCONTINUED: continued 发生了信号导致进程暂停</li></ul></li></ol></blockquote><br><h4 id="文件和目录函数" tabindex="-1"><a class="header-anchor" href="#文件和目录函数" aria-hidden="true">#</a> 文件和目录函数</h4><blockquote><p><mark>文件操作函数</mark></p><ol><li><p>打开文件</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>FILE <span class="token operator">*</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>path<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>mode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 不能指定权限</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>mode:</p><ul><li>r: 读</li><li>w: 写</li><li>r+ 、w+: 可读可写</li><li>+: 创建</li><li>a: 追加</li><li>b: 二进制</li><li>t: 文本 (默认的)</li></ul></li><li><p>关闭文件</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">fclose</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></blockquote><blockquote><ol><li><p>打开文件-文件输入输出重定向</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>FILE <span class="token operator">*</span><span class="token function">freopen</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>filename<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>mode<span class="token punctuation">,</span> FILE <span class="token operator">*</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">// 示例: 把控制台输出导到文件中</span>

FILE <span class="token operator">*</span>pFile <span class="token operator">=</span> <span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">&quot;./test.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a+&quot;</span><span class="token punctuation">,</span> <span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token constant">__FILE__</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">__LINE__</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; &quot;</span> <span class="token operator">&lt;&lt;</span> __FUNCTION__ <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>nullptr <span class="token operator">!=</span> pFile<span class="token punctuation">)</span> <span class="token function">fclose</span><span class="token punctuation">(</span>pFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>将文件描述词转为文件指针</p><p>用 open 函数打开的时候, 得到一个 fd, 可以把文件描述符转换为 FILE *</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>FILE <span class="token operator">*</span><span class="token function">fdopen</span><span class="token punctuation">(</span><span class="token keyword">int</span> fildes<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>mode<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>返回文件流所使用的文件描述词</p><p>文件指针转换为文件描述符 (fd: file describtion)</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">fileno</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></blockquote><blockquote><ol><li><p>从文件流读取数据</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">size_t</span> <span class="token function">fread</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>buffer<span class="token punctuation">,</span> <span class="token class-name">size_t</span> size<span class="token punctuation">,</span> <span class="token class-name">size_t</span> count<span class="token punctuation">,</span> FILE <span class="token operator">*</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>由文件中读取一字符串</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">fgetc</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>由文件中读取一字符串</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">fgets</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> FILE <span class="token operator">*</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 文件必须以 t 模式打开</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>将数据写至文件流</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">size_t</span> <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span>ptr<span class="token punctuation">,</span> <span class="token class-name">size_t</span> size<span class="token punctuation">,</span> <span class="token class-name">size_t</span> nmemb<span class="token punctuation">,</span> FILE <span class="token operator">*</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>更新缓冲区</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">fflush</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></blockquote><blockquote><ol><li><p>将一指定字符写入文件流中</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">fputc</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">,</span> FILE <span class="token operator">*</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>将一指定的字符串写入文件内</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">fputs</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">,</span> FILE <span class="token operator">*</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>将数据写入至文件流</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">size_t</span> <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>ptr<span class="token punctuation">,</span> <span class="token class-name">size_t</span> size<span class="token punctuation">,</span> <span class="token class-name">size_t</span> nmemb<span class="token punctuation">,</span> FILE <span class="token operator">*</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>更新缓冲区</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">fflush</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></blockquote><br><h4 id="printf-函数-format-详解" tabindex="-1"><a class="header-anchor" href="#printf-函数-format-详解" aria-hidden="true">#</a> printf 函数 format 详解</h4><br><h4 id="scanf-函数-format-详解" tabindex="-1"><a class="header-anchor" href="#scanf-函数-format-详解" aria-hidden="true">#</a> scanf 函数 format 详解</h4><h3 id="网络编程基础" tabindex="-1"><a class="header-anchor" href="#网络编程基础" aria-hidden="true">#</a> 网络编程基础</h3><h4 id="网络的基本概念" tabindex="-1"><a class="header-anchor" href="#网络的基本概念" aria-hidden="true">#</a> 网络的基本概念</h4><h5 id="网络的物理结构" tabindex="-1"><a class="header-anchor" href="#网络的物理结构" aria-hidden="true">#</a> 网络的物理结构</h5><br><h5 id="网络中的地址" tabindex="-1"><a class="header-anchor" href="#网络中的地址" aria-hidden="true">#</a> 网络中的地址</h5><br><h5 id="网络的中的端口" tabindex="-1"><a class="header-anchor" href="#网络的中的端口" aria-hidden="true">#</a> 网络的中的端口</h5><br><h5 id="什么是协议" tabindex="-1"><a class="header-anchor" href="#什么是协议" aria-hidden="true">#</a> 什么是协议</h5><br><h5 id="tcp协议基础" tabindex="-1"><a class="header-anchor" href="#tcp协议基础" aria-hidden="true">#</a> TCP协议基础</h5><br><h4 id="套接字介绍" tabindex="-1"><a class="header-anchor" href="#套接字介绍" aria-hidden="true">#</a> 套接字介绍</h4><br><h4 id="套接字的创建" tabindex="-1"><a class="header-anchor" href="#套接字的创建" aria-hidden="true">#</a> 套接字的创建</h4><br><h4 id="地址和端口的设置" tabindex="-1"><a class="header-anchor" href="#地址和端口的设置" aria-hidden="true">#</a> 地址和端口的设置</h4><br><h4 id="绑定地址和端口" tabindex="-1"><a class="header-anchor" href="#绑定地址和端口" aria-hidden="true">#</a> 绑定地址和端口</h4><br><h4 id="监听和接受连接" tabindex="-1"><a class="header-anchor" href="#监听和接受连接" aria-hidden="true">#</a> 监听和接受连接</h4><br><h4 id="数据的读取和发送" tabindex="-1"><a class="header-anchor" href="#数据的读取和发送" aria-hidden="true">#</a> 数据的读取和发送</h4><br><h4 id="连接服务器" tabindex="-1"><a class="header-anchor" href="#连接服务器" aria-hidden="true">#</a> 连接服务器</h4><br><h4 id="接收和发送数据" tabindex="-1"><a class="header-anchor" href="#接收和发送数据" aria-hidden="true">#</a> 接收和发送数据</h4><br><h4 id="关闭连接" tabindex="-1"><a class="header-anchor" href="#关闭连接" aria-hidden="true">#</a> 关闭连接</h4><h4 id="错误处理" tabindex="-1"><a class="header-anchor" href="#错误处理" aria-hidden="true">#</a> 错误处理</h4><br><br><br><br><h2 id="二、-wsl" tabindex="-1"><a class="header-anchor" href="#二、-wsl" aria-hidden="true">#</a> 二、 WSL</h2><h3 id="wsl微软官方教程" tabindex="-1"><a class="header-anchor" href="#wsl微软官方教程" aria-hidden="true">#</a> WSL微软官方教程</h3>`,126),r={href:"https://learn.microsoft.com/zh-cn/windows/wsl/",target:"_blank",rel:"noopener noreferrer"},u=i(`<br><h3 id="固定ip" tabindex="-1"><a class="header-anchor" href="#固定ip" aria-hidden="true">#</a> 固定IP</h3><div class="language-vbscript line-numbers-mode" data-ext="vbscript"><pre class="language-vbscript"><code>Set ws = WScript.CreateObject(&quot;WScript.Shell&quot;)
ws.run &quot;wsl -d CentOS7 -u root sudo service sshd start&quot;, vbhide
ws.run &quot;wsl -d CentOS7 -u root ip addr add 172.28.131.101/20 broadcast 172.28.143.255 dev eth0 label eth0:1&quot;, vbhide
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>netsh interface ip add address <span class="token string">&quot;vEthernet (WSL)&quot;</span> 172<span class="token punctuation">.</span>28<span class="token punctuation">.</span>131<span class="token punctuation">.</span>102 255<span class="token punctuation">.</span>255<span class="token punctuation">.</span>240<span class="token punctuation">.</span>0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><h2 id="三、-clash配置" tabindex="-1"><a class="header-anchor" href="#三、-clash配置" aria-hidden="true">#</a> 三、 clash配置</h2>`,6),v={href:"https://blog.csdn.net/DPCFish/article/details/121663625",target:"_blank",rel:"noopener noreferrer"},k={href:"https://zhuanlan.zhihu.com/p/451863859",target:"_blank",rel:"noopener noreferrer"},m=i(`<ol><li><p>下载软件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://gitee.com/wzqxxl/transit/attach_files/1047328/download/clash-linux-amd64-v1.10.0.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>配置订阅链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-O</span> config.yaml 这里改成你的订阅链接
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-O</span> Country.mmdb https://gitee.com/wzqxxl/transit/attach_files/1047342/download/Country.mmdb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>文件结构</p></li></ol><p><img src="https://img-blog.csdnimg.cn/e423988c682746cea936c691accae982.png" alt="image-20220429150221411" loading="lazy"></p><ol start="4"><li><p>给clash赋予权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chmod</span> +x clash1.10.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>运行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./clash1.10.0 <span class="token parameter variable">-d</span> <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>后台运行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">screen</span> <span class="token parameter variable">-S</span> clash  /usr/local/src/clash/clash1.10.0 <span class="token parameter variable">-d</span> /usr/local/src/clash/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>&lt;br/&gt;&lt;br/&gt;</code></p></li></ol><h2 id="四、-更换源" tabindex="-1"><a class="header-anchor" href="#四、-更换源" aria-hidden="true">#</a> 四、 更换源</h2><p>备份原来的文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><p>查看codename（该版本系统的代号）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>lsb_release <span class="token parameter variable">-a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img-blog.csdnimg.cn/f10402b865794107a817fee586887389.png" alt="20220703111614" loading="lazy"></p></li></ol><p><strong>阿里源</strong></p><p>将 <code>$Codename</code> 替换为上面获取的 Codename 即可</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/apt/sources.list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>deb http://mirrors.aliyun.com/ubuntu/ <span class="token variable">$Codename</span> main multiverse restricted universe
deb http://mirrors.aliyun.com/ubuntu/ <span class="token variable">$Codename</span>-backports main multiverse restricted universe
deb http://mirrors.aliyun.com/ubuntu/ <span class="token variable">$Codename</span>-proposed main multiverse restricted universe
deb http://mirrors.aliyun.com/ubuntu/ <span class="token variable">$Codename</span>-security main multiverse restricted universe
deb http://mirrors.aliyun.com/ubuntu/ <span class="token variable">$Codename</span>-updates main multiverse restricted universe
deb-src http://mirrors.aliyun.com/ubuntu/ <span class="token variable">$Codename</span> main multiverse restricted universe
deb-src http://mirrors.aliyun.com/ubuntu/ <span class="token variable">$Codename</span>-backports main multiverse restricted universe
deb-src http://mirrors.aliyun.com/ubuntu/ <span class="token variable">$Codename</span>-proposed main multiverse restricted universe
deb-src http://mirrors.aliyun.com/ubuntu/ <span class="token variable">$Codename</span>-security main multiverse restricted universe
deb-src http://mirrors.aliyun.com/ubuntu/ <span class="token variable">$Codename</span>-updates main multiverse restricted universe
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><h2 id="五、-依赖项安装" tabindex="-1"><a class="header-anchor" href="#五、-依赖项安装" aria-hidden="true">#</a> 五、 依赖项安装</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span>  gcc  cmake  gdb net-tools openssl <span class="token function">curl</span> build-essential  libtool  ca-certificates  gnupg  lsb-release  git-core bison  libreadline6-dev zlib1g  zlib1g-dev  libssl-dev  libyaml-dev  libsqlite3-0 libsqlite3-dev  sqlite3  autoconf libc6-dev  libpcre3-dev  libcurl4-nss-dev  libxml2-dev libxslt-dev imagemagick libffi-dev firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 六、 sudo apt-get install -y python3-pip python3-dev python-dev</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><h2 id="七、-安装proxychains" tabindex="-1"><a class="header-anchor" href="#七、-安装proxychains" aria-hidden="true">#</a> 七、 安装proxychains</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> proxychains
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><p>将 dns 这行注释掉</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/proxychains.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img-blog.csdnimg.cn/eb445eabcdd84c5ea1490fc5ed9f04c9.png" alt="image-20220426130042979" loading="lazy"></p><br></li><li><p>Clash（或者其它代理软件） 打开局域网连接</p><p><img src="https://img-blog.csdnimg.cn/a7d36df1020a4c7e870146c8387987bd.png" alt="image-20230102132046978" loading="lazy"></p><br></li><li><p>设置代理列表，<code>类型 空格 IP 空格 端口</code></p><p><img src="https://img-blog.csdnimg.cn/99f4300c2f52466785ba4d6b40e0147c.png" alt="image-20220426130202733" loading="lazy"></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>http <span class="token number">192.168</span>.1.206 <span class="token number">7890</span>
https <span class="token number">192.168</span>.1.206 <span class="token number">7890</span>
socks5 <span class="token number">192.168</span>.1.206 <span class="token number">7890</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用</p><p>只需要在命令前面加上 <code>proxychains</code>即可</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>proxychains <span class="token function">curl</span> google.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img-blog.csdnimg.cn/2b4c61b852b8464990b680f368e09457.png" alt="image-20220426130404354" loading="lazy"></p></li></ol><p><code>&lt;br/&gt;&lt;br/&gt;</code></p><h2 id="八、-终端美化与加强" tabindex="-1"><a class="header-anchor" href="#八、-终端美化与加强" aria-hidden="true">#</a> 八、 终端美化与加强</h2><h3 id="安装-zsh" tabindex="-1"><a class="header-anchor" href="#安装-zsh" aria-hidden="true">#</a> 安装 zsh</h3><ol><li><p>查看系统是否装了 zsh</p><ul><li><p>查看当前使用的 shell</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token environment constant">$SHELL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img-blog.csdnimg.cn/cf9594d2a47b4f78bb4d14440dd970e8.png" alt="image-20230508104432828" loading="lazy"></p><br></li><li><p>查看系统是否装了 zsh</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> /etc/shells
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img-blog.csdnimg.cn/43702e3175ef4114aac58c0680c08eba.png" alt="image-20230508104352410" loading="lazy"></p><br></li></ul></li><li><p>安装 zsh（系统没有查到zsh，则安装)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">zsh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>切换 shell 为 zsh</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>chsh <span class="token parameter variable">-s</span> /bin/zsh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> chsh <span class="token parameter variable">-s</span> /bin/zsh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>重启Linux</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">reboot</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>开机后，zsh 会要求用户选择启动项。</p><p>输入 0 即可</p><p><img src="https://img-blog.csdnimg.cn/a1b61e46c4c54d9c9d68949ce8d4396c.png" alt="image-20230508105152947" loading="lazy"></p><br></li><li><p>查看当前 shell , 如果显示 /bin/zsh ，则配置成功</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token builtin class-name">echo</span> <span class="token environment constant">$SHELL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img-blog.csdnimg.cn/699aabea1277499ca39f97bfd20494b6.png" alt="image-20230508105257255" loading="lazy"></p><br></li><li><p>安装 oh my zsh</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sh</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">wget</span> https://gitee.com/wzqxxl/ohmyzsh/releases/download/%E6%96%87%E4%BB%B6/install.sh <span class="token parameter variable">-O</span> -<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>到此就安装完成</p><img src="https://img-blog.csdnimg.cn/4bf8e37608bd461d868614f214d4fc0d.png" alt="image-20230101101103549" style="zoom:67%;"></li><li><p>更换主题</p></li></ol>`,24),b={href:"https://github.com/ohmyzsh/ohmyzsh/wiki/themes#pygmalion",target:"_blank",rel:"noopener noreferrer"},g=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> ~/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改 <code>ZSH_THEME</code>参数即可。之后执行即可更换主题：gnzh</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> ~/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img-blog.csdnimg.cn/8e36d716a98947b58079f92732c4baf8.png" alt="image-20220426130630207" loading="lazy"></p><br><p>使用 powerlevel10k 主题</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token parameter variable">--depth</span><span class="token operator">=</span><span class="token number">1</span> https://gitee.com/romkatv/powerlevel10k.git <span class="token variable">\${ZSH_CUSTOM<span class="token operator">:-</span>$HOME<span class="token operator">/</span>.oh-my-zsh<span class="token operator">/</span>custom}</span>/themes/powerlevel10k
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">ZSH_THEME</span><span class="token operator">=</span><span class="token string">&quot;powerlevel10k/powerlevel10k&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="oh-my-zsh插件" tabindex="-1"><a class="header-anchor" href="#oh-my-zsh插件" aria-hidden="true">#</a> oh-my-zsh插件</h3><h4 id="智能提示" tabindex="-1"><a class="header-anchor" href="#智能提示" aria-hidden="true">#</a> 智能提示</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://gitee.com/xs66/zsh-autosuggestions <span class="token variable">$ZSH</span>/plugins/zsh-autosuggestions
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><h4 id="语法高亮" tabindex="-1"><a class="header-anchor" href="#语法高亮" aria-hidden="true">#</a> 语法高亮</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://gitee.com/xs66/zsh-syntax-highlighting.git <span class="token variable">$ZSH</span>/plugins/zsh-syntax-highlighting
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><h4 id="载入配置" tabindex="-1"><a class="header-anchor" href="#载入配置" aria-hidden="true">#</a> 载入配置</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> ~/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">plugins</span><span class="token operator">=</span><span class="token punctuation">(</span>
   <span class="token function">git</span>
   extract
   <span class="token function">cp</span>
   safe-paste
   colored-man-pages
   
   zsh-syntax-highlighting
   zsh-autosuggestions
 <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h4 id="使配置生效" tabindex="-1"><a class="header-anchor" href="#使配置生效" aria-hidden="true">#</a> 使配置生效</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> ~/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>&lt;br/&gt;&lt;br/&gt;</code></p><h2 id="九、-vim" tabindex="-1"><a class="header-anchor" href="#九、-vim" aria-hidden="true">#</a> 九、 Vim</h2><h3 id="配置-vim" tabindex="-1"><a class="header-anchor" href="#配置-vim" aria-hidden="true">#</a> 配置 Vim</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> ~/.vimrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参考配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">set</span> number <span class="token string">&quot;设置行号
syntax on &quot;</span>高亮

colorscheme tender <span class="token string">&quot;设置主题---主题文件夹：/usr/share/vim/vim82/colors

set mouse=a &quot;</span>鼠标模式

<span class="token builtin class-name">set</span> <span class="token assign-left variable">encoding</span><span class="token operator">=</span>utf-8 <span class="token string">&quot;编码设置
set noswapfile
set laststatus=2 &quot;</span>总是显示状态行

<span class="token builtin class-name">set</span> autoindent <span class="token string">&quot;自动缩进
set shiftwidth=4 &quot;</span>缩进长度是4

<span class="token builtin class-name">set</span> <span class="token assign-left variable">softtabstop</span><span class="token operator">=</span>-1 <span class="token string">&quot;Backspace键来一次删除4个空格

set showmatch &quot;</span>高亮显示匹配的括号

<span class="token builtin class-name">set</span> hlsearch <span class="token string">&quot;高亮显示所有搜索到的内容

set incsearch &quot;</span>光标立刻跳转到搜索到内容

<span class="token builtin class-name">set</span> noeb <span class="token string">&quot;去掉输入错误时的提示声音

set backspace=indent,eol,start &quot;</span>让Backspace键可以往前删除字符

<span class="token builtin class-name">set</span> <span class="token assign-left variable">statusline</span><span class="token operator">=</span>%F%r<span class="token punctuation">\\</span> <span class="token punctuation">[</span>HEX<span class="token operator">=</span>%B<span class="token punctuation">]</span><span class="token punctuation">[</span>%l,%v,%P<span class="token punctuation">]</span><span class="token punctuation">\\</span> %<span class="token punctuation">{</span>strftime<span class="token punctuation">(</span><span class="token punctuation">\\</span>&quot;%H:%M<span class="token punctuation">\\</span>&quot;<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token string">&quot;设置状态行显示的内容
&quot;</span> %F: 显示当前文件的完整路径.
<span class="token string">&quot; %r: 如果readonly,会显示[RO]
&quot;</span> %B: 显示光标下字符的编码值,十六进制.
<span class="token string">&quot; %l:光标所在的行号. %v:光标所在的虚拟列号.
&quot;</span> %P: 显示当前内容在整个文件中的百分比.
<span class="token string">&quot; %H和%M是strftime()函数的参数,获取时间.

&quot;</span> 快捷输入--自动完成括号和引号
inoremap <span class="token string">&#39; &#39;</span>&#39;<span class="token operator">&lt;</span>ESC<span class="token operator">&gt;</span>i
inoremap <span class="token string">&quot; &quot;</span>&quot;<span class="token operator">&lt;</span>ESC<span class="token operator">&gt;</span>i
inoremap <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span>ESC<span class="token operator">&gt;</span>i
inoremap <span class="token punctuation">[</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>ESC<span class="token operator">&gt;</span>i
inoremap <span class="token punctuation">{</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>ESC<span class="token operator">&gt;</span>i
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="更改主题" tabindex="-1"><a class="header-anchor" href="#更改主题" aria-hidden="true">#</a> 更改主题</h3>`,29),h=i(`<li><p>下载主题</p><p>注：将路径改为自己的，例如，你可能是 <code>/usr/share/vim/vim9</code>，也可能是 <code>/usr/share/vim/vim8</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span>  <span class="token function">wget</span> <span class="token parameter variable">-O</span> /usr/share/vim/vim81/colors/tender.vim https://gitee.com/wzqxxl/transit/attach_files/1114920/download/tender.vim
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span>  <span class="token function">wget</span> <span class="token parameter variable">-O</span> /usr/share/vim/vim80/colors/tender.vim https://gitee.com/wzqxxl/transit/attach_files/1114920/download/tender.vim
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>注：MacOS下无法访问/usr/目录，则在根目录下文件夹 <code>~/.vim/colors</code>，将主题文件放在该目录下即可</li><li>-O 参数表示将下载内容保存到所指定的文件</li><li>主题文件所在文件夹：<code>/usr/share/vim/vim82/colors</code></li></ul></li><li><p>设置 <code>~/.vimrc</code> 配置主题</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> ~/.vimrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>colorscheme tender &quot;设置主题
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img-blog.csdnimg.cn/9ff00e678df2407fad27c6d588dc0a63.png" alt="image-20230102111123266" loading="lazy"></p></li>`,2),f=s("p",null,"更多主题",-1),y={href:"https://zhuanlan.zhihu.com/p/58188561",target:"_blank",rel:"noopener noreferrer"},x=s("br",null,null,-1),w=s("h3",{id:"vim-plug-插件管理-安装",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#vim-plug-插件管理-安装","aria-hidden":"true"},"#"),a(" vim-plug 插件管理 安装")],-1),_={href:"https://github.com/junegunn/vim-plug",target:"_blank",rel:"noopener noreferrer"},q={href:"https://vimawesome.com/",target:"_blank",rel:"noopener noreferrer"},z=i(`<ol><li><p>下载 <code>vim-plug</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-fLo</span> ~/.vim/autoload/plug.vim --create-dirs <span class="token punctuation">\\</span>
    https://gitee.com/wzqxxl/transit/attach_files/1114918/download/plug.vim
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>编辑 <code>.vimrc</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> ~/.vimrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>一些插件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>安装插件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>如果配置了代理，安装了 <code>proxychains</code> ，则可以用下面这条命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>proxychains <span class="token function">vim</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>按 <code>&lt;kbd&gt;</code>Shift<code>&lt;/kbd&gt;</code> + <code>&lt;kbd&gt;</code>:<code>&lt;/kbd&gt;</code> 进入命令模式，输入</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>PlugInstall
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img-blog.csdnimg.cn/a0759729358947288d1c6ac003e75f5d.png" alt="image-20230102112243637" loading="lazy"></p><p><code>&lt;font color=&quot;grey&quot;&gt;</code>【注】由于插件是去 GitHub 下载，而国内网络无法连接，故需要靠科学上网<code>&lt;/font&gt;</code></p></li></ol><br><h3 id="自动补全插件-coc-安装" tabindex="-1"><a class="header-anchor" href="#自动补全插件-coc-安装" aria-hidden="true">#</a> 自动补全插件 coc 安装</h3>`,3),E={href:"https://github.com/neoclide/coc.nvim",target:"_blank",rel:"noopener noreferrer"},C=i(`<p>编辑 <code>.vimrc</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Plug <span class="token string">&#39;neoclide/coc.nvim&#39;</span>, <span class="token punctuation">{</span><span class="token string">&#39;branch&#39;</span><span class="token builtin class-name">:</span> <span class="token string">&#39;release&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行 <code>PlugInstall</code></p><br><h3 id="自动补全插件-ycm-安装" tabindex="-1"><a class="header-anchor" href="#自动补全插件-ycm-安装" aria-hidden="true">#</a> 自动补全插件 YCM 安装</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ~/.vim/plugged/YouCompleteMe
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python3 ./install.py --clangd-completer --force-sudo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置 <code>vimrc</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">let</span> g:UltiSnipsExpandTrigger<span class="token operator">=</span><span class="token string">&quot;&lt;tab&gt;&quot;</span>
<span class="token builtin class-name">let</span> g:UltiSnipsJumpForwardTrigger<span class="token operator">=</span><span class="token string">&quot;&lt;c-b&gt;&quot;</span>
<span class="token builtin class-name">let</span> g:UltiSnipsJumpBackwardTrigger<span class="token operator">=</span><span class="token string">&quot;&lt;c-z&gt;&quot;</span>
<span class="token string">&quot; If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit=&quot;</span>vertical&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token string">&quot; 自动补全配置
set completeopt=longest,menu    &quot;</span>让Vim的补全菜单行为与一般IDE一致<span class="token punctuation">(</span>参考VimTip1228<span class="token punctuation">)</span>
autocmd InsertLeave * <span class="token keyword">if</span> pumvisible<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token operator">|</span>pclose<span class="token operator">|</span>endif <span class="token string">&quot;离开插入模式后自动关闭预览窗口
inoremap &lt;expr&gt; &lt;CR&gt;       pumvisible() ? &quot;</span><span class="token punctuation">\\</span><span class="token operator">&lt;</span>C-y<span class="token operator">&gt;</span><span class="token string">&quot; : &quot;</span><span class="token punctuation">\\</span><span class="token operator">&lt;</span>CR<span class="token operator">&gt;</span><span class="token string">&quot;    &quot;</span>回车即选中当前项
<span class="token string">&quot;上下左右键的行为 会显示其他信息
inoremap &lt;expr&gt; &lt;Down&gt;     pumvisible() ? &quot;</span><span class="token punctuation">\\</span><span class="token operator">&lt;</span>C-n<span class="token operator">&gt;</span><span class="token string">&quot; : &quot;</span><span class="token punctuation">\\</span><span class="token operator">&lt;</span>Down<span class="token operator">&gt;</span><span class="token string">&quot;
inoremap &lt;expr&gt; &lt;Up&gt;       pumvisible() ? &quot;</span><span class="token punctuation">\\</span><span class="token operator">&lt;</span>C-p<span class="token operator">&gt;</span><span class="token string">&quot; : &quot;</span><span class="token punctuation">\\</span><span class="token operator">&lt;</span>Up<span class="token operator">&gt;</span><span class="token string">&quot;
inoremap &lt;expr&gt; &lt;PageDown&gt; pumvisible() ? &quot;</span><span class="token punctuation">\\</span><span class="token operator">&lt;</span>PageDown<span class="token operator">&gt;</span><span class="token punctuation">\\</span><span class="token operator">&lt;</span>C-p<span class="token operator">&gt;</span><span class="token punctuation">\\</span><span class="token operator">&lt;</span>C-n<span class="token operator">&gt;</span><span class="token string">&quot; : &quot;</span><span class="token punctuation">\\</span><span class="token operator">&lt;</span>PageDown<span class="token operator">&gt;</span><span class="token string">&quot;
inoremap &lt;expr&gt; &lt;PageUp&gt;   pumvisible() ? &quot;</span><span class="token punctuation">\\</span><span class="token operator">&lt;</span>PageUp<span class="token operator">&gt;</span><span class="token punctuation">\\</span><span class="token operator">&lt;</span>C-p<span class="token operator">&gt;</span><span class="token punctuation">\\</span><span class="token operator">&lt;</span>C-n<span class="token operator">&gt;</span><span class="token string">&quot; : &quot;</span><span class="token punctuation">\\</span><span class="token operator">&lt;</span>PageUp<span class="token operator">&gt;</span><span class="token string">&quot;

&quot;</span>youcompleteme  默认tab  s-tab 和自动补全冲突
<span class="token string">&quot;let g:ycm_key_list_select_completion=[&#39;&lt;c-n&gt;&#39;]
let g:ycm_key_list_select_completion = [&#39;&lt;Down&gt;&#39;]
&quot;</span><span class="token builtin class-name">let</span> g:ycm_key_list_previous_completion<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;&lt;c-p&gt;&#39;</span><span class="token punctuation">]</span>
<span class="token builtin class-name">let</span> g:ycm_key_list_previous_completion <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;&lt;Up&gt;&#39;</span><span class="token punctuation">]</span>
<span class="token builtin class-name">let</span> g:ycm_confirm_extra_conf<span class="token operator">=</span><span class="token number">0</span> <span class="token string">&quot;关闭加载.ycm_extra_conf.py提示

let g:ycm_collect_identifiers_from_tags_files=1 &quot;</span> 开启 YCM 基于标签引擎
<span class="token builtin class-name">let</span> g:ycm_min_num_of_chars_for_completion<span class="token operator">=</span><span class="token number">2</span> <span class="token string">&quot; 从第2个键入字符就开始罗列匹配项
let g:ycm_cache_omnifunc=0  &quot;</span> 禁止缓存匹配项,每次都重新生成匹配项
<span class="token builtin class-name">let</span> g:ycm_seed_identifiers_with_syntax<span class="token operator">=</span><span class="token number">1</span>    <span class="token string">&quot; 语法关键字补全
nnoremap &lt;F5&gt; :YcmForceCompileAndDiagnostics&lt;CR&gt;    &quot;</span>force recomile with syntastic
<span class="token string">&quot;nnoremap &lt;leader&gt;lo :lopen&lt;CR&gt; &quot;</span><span class="token function">open</span> locationlist
<span class="token string">&quot;nnoremap &lt;leader&gt;lc :lclose&lt;CR&gt;    &quot;</span>close locationlist
inoremap <span class="token operator">&lt;</span>leader<span class="token operator">&gt;</span><span class="token operator">&lt;</span>leader<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>C-x<span class="token operator">&gt;</span><span class="token operator">&lt;</span>C-o<span class="token operator">&gt;</span>
<span class="token string">&quot;在注释输入中也能补全
let g:ycm_complete_in_comments = 1
&quot;</span>在字符串输入中也能补全
<span class="token builtin class-name">let</span> g:ycm_complete_in_strings <span class="token operator">=</span> <span class="token number">1</span>
<span class="token string">&quot;注释和字符串中的文字也会被收入补全
let g:ycm_collect_identifiers_from_comments_and_strings = 0

nnoremap &lt;leader&gt;jd :YcmCompleter GoToDefinitionElseDeclaration&lt;CR&gt; &quot;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;br/&gt;&lt;br/&gt;</code></p><h2 id="十、-安装-miniconda" tabindex="-1"><a class="header-anchor" href="#十、-安装-miniconda" aria-hidden="true">#</a> 十、 安装 Miniconda</h2>`,12),S={href:"https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/?C=M&O=D",target:"_blank",rel:"noopener noreferrer"},L=i(`<p><code>&lt;br/&gt;&lt;br/&gt;</code></p><h2 id="十一、-安装-workon" tabindex="-1"><a class="header-anchor" href="#十一、-安装-workon" aria-hidden="true">#</a> 十一、 安装 workon</h2><p><code>&lt;br/&gt;&lt;br/&gt;</code></p><h2 id="十二、-编程环境" tabindex="-1"><a class="header-anchor" href="#十二、-编程环境" aria-hidden="true">#</a> 十二、 编程环境</h2><h3 id="python" tabindex="-1"><a class="header-anchor" href="#python" aria-hidden="true">#</a> Python</h3><ol><li><p>下载</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://www.python.org/ftp/python/3.7.16/Python-3.7.16.tar.xz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-xvf</span> Python-3.7.16.tar.xz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>配置安装路径</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./configure <span class="token assign-left variable">prefix</span><span class="token operator">=</span>/usr/local/src/Python
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>编译和安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建软链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/src/Python/bin/python3.7 /usr/bin/python
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/src/Python/bin/pip3 /usr/bin/pip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br></li></ol><h4 id="更换-pip-源" tabindex="-1"><a class="header-anchor" href="#更换-pip-源" aria-hidden="true">#</a> 更换 pip 源</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> ~/.pip/pip.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>添加以下内容：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>global<span class="token punctuation">]</span>
<span class="token function">timeout</span> <span class="token operator">=</span> <span class="token number">6000</span>
index-url <span class="token operator">=</span> https://pypi.doubanio.com/simple
trusted-host <span class="token operator">=</span> pypi.doubanio.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="pcre-库" tabindex="-1"><a class="header-anchor" href="#pcre-库" aria-hidden="true">#</a> PCRE 库</h3>`,12),I={href:"https://sourceforge.mirrorservice.org/p/pc/pcre/pcre/8.39/pcre-8.39.tar.gz",target:"_blank",rel:"noopener noreferrer"},F=i(`<ol><li><p>下载</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://sourceforge.mirrorservice.org/p/pc/pcre/pcre/8.39/pcre-8.39.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> pcre-8.39.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> ./configure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>编译和安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><h2 id="zlib-库" tabindex="-1"><a class="header-anchor" href="#zlib-库" aria-hidden="true">#</a> zlib 库</h2></li><li><p>下载</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://nchc.dl.sourceforge.net/project/libpng/zlib/1.2.11/zlib-1.2.11.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> zlib-1.2.11.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> ./configure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>编译和安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><br><h3 id="openssl-开发库" tabindex="-1"><a class="header-anchor" href="#openssl-开发库" aria-hidden="true">#</a> OpenSSL 开发库</h3><ol><li><p>下载</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">wget</span> https://www.openssl.org/source/openssl-1.1.1g.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> openssl-1.1.1g.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> ./config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>编译和安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br></li></ol><h3 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> Nginx</h3>`,5),D={href:"http://nginx.org",target:"_blank",rel:"noopener noreferrer"},P=i(`<ol><li><p>下载</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">wget</span> http://nginx.org/download/nginx-1.16.1.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> nginx-1.16.1.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>配置安装路径、模块</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> ./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/local/src/nginx --with-http_stub_status_module --with-http_ssl_module --with-file-aio --with-http_realip_module
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>编译</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建软链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/src/nginx/sbin/niginx /usr/bin/nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><br><h3 id="fastdfs" tabindex="-1"><a class="header-anchor" href="#fastdfs" aria-hidden="true">#</a> FastDFS</h3><h4 id="libfastcommon-的安装" tabindex="-1"><a class="header-anchor" href="#libfastcommon-的安装" aria-hidden="true">#</a> libfastcommon 的安装</h4><blockquote><p>libfastcommon 为 FastDFS 操作的基础库，FastDFS 没有使用标准的库，而是封装了一套和 FastDFS 相关的库。</p></blockquote>`,5),T={href:"https://github.com/happyfish100/libfastcommon",target:"_blank",rel:"noopener noreferrer"},R=i(`<ol><li><p>下载</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://gitee.com/wzqxxl/transit/releases/download/FastDFS/libfastcommon-1.0.43.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">tar</span> <span class="token parameter variable">-xzvf</span> libfastcommon-1.0.43.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>编译代码、安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> ./make.sh <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> ./make.sh <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>动态库安装后的路径</p><p>安装成功后，默认会复制到 /usr/lib64 下</p></li><li><p>设置环境变量或者创建软链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">LD_LIBRARY_PATH</span><span class="token operator">=</span>/usr/lib64/:<span class="token variable">$LD_LIBRARY_PATH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/lib64/libfastcommon.so /usr/lib/libfastcommon.so
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br></li></ol><h4 id="fastdfs-的安装" tabindex="-1"><a class="header-anchor" href="#fastdfs-的安装" aria-hidden="true">#</a> FastDFS 的安装</h4>`,2),O={href:"https://code.google.com/archive/p/fastdfs/downloads",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/happyfish100/fastdfs.git",target:"_blank",rel:"noopener noreferrer"},H=i(`<ol><li><p>下载</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://gitee.com/wzqxxl/transit/releases/download/FastDFS/fastdfs-6.06.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> fastdfs-6.06.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>编译、安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> ./make.sh <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> ./make.sh <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>可执行程序默认会安装到/usr/bin 中：</p><p><img src="https://img-blog.csdnimg.cn/1c64590bccae41b5a9b1b643f5a0f954.png" alt="image-20230118100311642" loading="lazy"></p></li><li><p>安装成功后，自动在 /etc/fdfs 中添加三个配置文件：</p><p><img src="https://img-blog.csdnimg.cn/f1eabfb046a643dc8e7a955abdebf764.png" alt="image-20230118100707397" loading="lazy"></p></li></ol><br><h4 id="fastdfs-的配置" tabindex="-1"><a class="header-anchor" href="#fastdfs-的配置" aria-hidden="true">#</a> FastDFS 的配置</h4><blockquote><p>先配置 tracker，再添加一个 storage，每添加添加一个 storage，实际上是 storage 连接 tracker，tracker 必须存在，否则 storage 无法加进来，client 主要用于测试上传、下载文件。</p></blockquote><br><h5 id="tracker-的配置" tabindex="-1"><a class="header-anchor" href="#tracker-的配置" aria-hidden="true">#</a> tracker 的配置</h5><ol><li><p>拷贝配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">cp</span> /etc/fdfs/tracker.conf.sample /etc/fdfs/tracker.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>修改 配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/fdfs/tracker.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>tracker 所在服务器的 ip</li></ul><p><img src="https://img-blog.csdnimg.cn/ec6d2e7b45dc44339a4baac70e13d242.png" alt="image-20230118101911902" loading="lazy"></p><ul><li>tracker 日志存放的路径 (此路径必须已经存在，不然后面会报错)</li></ul><p><img src="https://img-blog.csdnimg.cn/2f584b20dfac4c3485e73dea4215d576.png" alt="image-20230118102336469" loading="lazy"></p></li></ol><br><h5 id="storage-的配置" tabindex="-1"><a class="header-anchor" href="#storage-的配置" aria-hidden="true">#</a> storage 的配置</h5><ol><li><p>拷贝配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">cp</span> /etc/fdfs/storage.conf.sample /etc/fdfs/storage.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>修改 配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/fdfs/storage.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>storage 所在服务器 ip</p><p><img src="https://img-blog.csdnimg.cn/cfb3d63c0ffc485f80583f6040be71f6.png" alt="image-20230118102650673" loading="lazy"></p></li><li><p>storage 存放日志的路径 (此路径必须已经存在，不然后面会报错)</p></li></ul><p><img src="https://img-blog.csdnimg.cn/d861345036f04a69a187ebd34bcd811b.png" alt="image-20230118102816641" loading="lazy"></p><ul><li><p>真正存储数据的路径</p><p><img src="https://img-blog.csdnimg.cn/689358bc7cf940b5aef292fb7a7c3388.png" alt="image-20230118103010849" loading="lazy"></p></li><li><p>指定 tracker 服务器地址和端口。不能是 127.0.0.1</p><p><img src="https://img-blog.csdnimg.cn/aec7d0fb987c4ffd99cc923b3a0e9f01.png" alt="image-20230118103203809" loading="lazy"></p></li></ul></li></ol><br><h5 id="client-的配置" tabindex="-1"><a class="header-anchor" href="#client-的配置" aria-hidden="true">#</a> client 的配置</h5><ol><li><p>拷贝配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">cp</span> /etc/fdfs/client.conf.sample /etc/fdfs/client.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>修改 配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/fdfs/client.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>base_path</p><p><img src="https://img-blog.csdnimg.cn/2de086a583cf42c49b918dfc805626af.png" alt="image-20230118103439830" loading="lazy"></p></li><li><p>tracker_server</p><p><img src="https://img-blog.csdnimg.cn/fae1c31290eb4466ade049b618818ef4.png" alt="image-20230118103631065" loading="lazy"></p></li></ul></li></ol><br><h5 id="启动服务" tabindex="-1"><a class="header-anchor" href="#启动服务" aria-hidden="true">#</a> 启动服务</h5><ol><li><p>启动 tracker</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> /usr/local/src/file/fastdfs/fastdfs-6.06/tracker/fdfs_trackerd /etc/fdfs/tracker.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ps</span> <span class="token parameter variable">-aux</span> <span class="token operator">|</span> <span class="token function">grep</span> fdfs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>启动 storage</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> /usr/local/src/file/fastdfs/fastdfs-6.06/storage/fdfs_storaged /etc/fdfs/storage.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>拷贝 fdfs_trackerd 和 fdfs_storaged 到 /usr/bin 目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">sudo</span> <span class="token function">cp</span> <span class="token parameter variable">-rf</span> /usr/local/src/file/fastdfs/fastdfs-6.06/tracker/fdfs_trackerd /usr/bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">sudo</span> <span class="token function">cp</span> <span class="token parameter variable">-rf</span> /usr/local/src/file/fastdfs/fastdfs-6.06/storage/fdfs_storaged /usr/bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><br><h4 id="fastdfs-客户端" tabindex="-1"><a class="header-anchor" href="#fastdfs-客户端" aria-hidden="true">#</a> FastDFS 客户端</h4><h5 id="测试-storage-状态" tabindex="-1"><a class="header-anchor" href="#测试-storage-状态" aria-hidden="true">#</a> 测试 storage 状态</h5><p>storage server 的状态通常有七种</p><p>通过 fdfs_monitor 测试 storage 状态，正常状态必须是 ACTIVE，否则无法上传、下载文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>fdfs_monitor /etc/fdfs/client.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img-blog.csdnimg.cn/f0d04b330bf54ea18fa6896c3eb61263.png" alt="image-20230118105459010" loading="lazy"></p><br><h5 id="上传、下载文件测试" tabindex="-1"><a class="header-anchor" href="#上传、下载文件测试" aria-hidden="true">#</a> 上传、下载文件测试</h5><p>在 <strong>client 所在的机器</strong>完成上传测试</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>fdfs_upload_file /etc/fdfs/client.conf test.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img-blog.csdnimg.cn/c89fc36d61f140bda543874aa6be0a93.png" alt="image-20230118105653367" loading="lazy"></p><p>文件上传到 <strong>storage 所在的服务器</strong>：</p><p><img src="https://img-blog.csdnimg.cn/dd270dcafd834fa9b418e7e5b9490c34.png" alt="image-20230118105818059" loading="lazy"></p><p>在 client 所在的机器完成下载、删除测试：</p><p>下载：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>fdfs_download_file /etc/fdfs/client.conf group1/M00/00/00/rBj_CGPHX-qAZ1itAAAADK8IOy0245.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img-blog.csdnimg.cn/f0504bdc05ed4d7c9274430c6881edb5.png" alt="image-20230118110149824" loading="lazy"></p><p>删除：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>fdfs_delete_file /etc/fdfs/client.conf group1/M00/00/00/rBj_CGPHX-qAZ1itAAAADK8IOy0245.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><h4 id="上传文件源码简析" tabindex="-1"><a class="header-anchor" href="#上传文件源码简析" aria-hidden="true">#</a> 上传文件源码简析</h4><p>FastDFS 源码中提供了 client 实现的相应源码 <code>fdfs_upload_file.c</code>：</p><p><img src="https://img-blog.csdnimg.cn/cccc16deb38f4ecf8da96ea29386bcef.png" alt="image-20230118110620976" loading="lazy"></p><br><h3 id="fastcgi" tabindex="-1"><a class="header-anchor" href="#fastcgi" aria-hidden="true">#</a> FastCGI</h3><h4 id="spawn-fcgi" tabindex="-1"><a class="header-anchor" href="#spawn-fcgi" aria-hidden="true">#</a> spawn-fcgi</h4>`,43),N={href:"http://redmine.lighttpd.net/projects/spawn-fcgi/wiki",target:"_blank",rel:"noopener noreferrer"},U=i(`<ol><li><p>解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> spawn-fcgi-1.6.4.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> ./configure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>编译安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建软连接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/src/file/fastcgi/spawn-fcgi-1.6.4/src/spawn-fcgi /usr/bin/spawn-fcgi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br></li></ol><h3 id="软件开发套件-fcgi" tabindex="-1"><a class="header-anchor" href="#软件开发套件-fcgi" aria-hidden="true">#</a> 软件开发套件 fcgi</h3><blockquote><p>使用 C/C++编写 FastCGI 应用程序，可以使用 FastCGI 软件开发套件或者其它开发框架，如 fcgi 。</p></blockquote>`,3),W={href:"https://fossies.org/linux/www/old/fcgi-2.4.0.tar.gz",target:"_blank",rel:"noopener noreferrer"},j=i(`<ol><li><p>解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> fcgi-2.4.1-SNAP-0910052249.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> ./configure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>编译安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /home/xxl/fastdfs/storage/fastdfs0/data /home/xxl/fastdfs/storage/fastdfs0/data/M00
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br></li></ol><h3 id="hiredis" tabindex="-1"><a class="header-anchor" href="#hiredis" aria-hidden="true">#</a> hiredis</h3><blockquote><p>hiredis 是 Redis 数据库的一个 C 客户端库。</p></blockquote><p><code>&lt;br/&gt;&lt;br/&gt;</code></p><h2 id="十三、-数据库" tabindex="-1"><a class="header-anchor" href="#十三、-数据库" aria-hidden="true">#</a> 十三、 数据库</h2><h3 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> mysql</h3><h4 id="一、安装" tabindex="-1"><a class="header-anchor" href="#一、安装" aria-hidden="true">#</a> 一、安装</h4><ol><li><p>下载安装（这条命令会下载最新版）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> mysql-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> mysql-client
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>MySQL 开发包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> libmysqlclient-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>启动服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">service</span> mysql start

<span class="token comment"># 或者</span>

systemctl start mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查看初始密码：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> /etc/mysql/debian.cnf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="https://img-blog.csdnimg.cn/7a7ed04d0bd94447a6dd6e3ef8a6970d.png" alt="image-20230101141741644" style="zoom:80%;"></li><li><p>使用初始账号密码进行登录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql -udebian-sys-maint <span class="token parameter variable">-p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="https://img-blog.csdnimg.cn/bdb439e8dc4547aaa9bbf2fbf5fe0048.png" alt="image-20230101141822979" style="zoom:80%;"></li></ol><br><h4 id="二、更改-root-用户密码" tabindex="-1"><a class="header-anchor" href="#二、更改-root-用户密码" aria-hidden="true">#</a> 二、更改 root 用户密码</h4><p>更改 root 用户的密码（同时修改加密方式为：mysql_native_password）：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>alter user <span class="token string">&quot;root&quot;</span>@localhost identified with mysql_native_password by <span class="token string">&quot;123&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>use mysql; 
update mysql.user set authentication_string=password(&#39;123&#39;) where user=&#39;root&#39; and Host =&#39;localhost&#39;; 
update user set plugin=&quot;mysql_native_password&quot;; 
flush privileges; 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若不需要修改加密方式，使用以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>alter user <span class="token string">&quot;root&quot;</span>@localhost identified by <span class="token string">&quot;123&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><h4 id="三、配置允许远程访问" tabindex="-1"><a class="header-anchor" href="#三、配置允许远程访问" aria-hidden="true">#</a> 三、配置允许远程访问</h4><ol><li><p>修改用户权限</p><ul><li>root 用户授权，<code>*.*</code> 表示所有数据库的所有表，前一个*表示数据库名，后一个*表示表名</li><li><code>&#39;root&#39;@&#39;%&#39;</code> 表示被授权的用户</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> mysql<span class="token punctuation">;</span>
<span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">PRIVILEGES</span> <span class="token keyword">ON</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> <span class="token string">&#39;root&#39;</span><span class="token variable">@&#39;%&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">UPDATE</span> mysql<span class="token punctuation">.</span><span class="token keyword">user</span> <span class="token keyword">SET</span> host<span class="token operator">=</span><span class="token string">&#39;%&#39;</span> <span class="token keyword">WHERE</span> <span class="token keyword">user</span><span class="token operator">=</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">ALTER</span> <span class="token keyword">USER</span> <span class="token string">&#39;root&#39;</span><span class="token variable">@&#39;%&#39;</span> IDENTIFIED <span class="token keyword">WITH</span> mysql_native_password <span class="token keyword">BY</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>
flush <span class="token keyword">privileges</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查看用户的 host 以及 plugin 信息</p><ul><li>host 设置为 % 意思是允许所有远程主机连接 MySQL</li><li>如果 authentication 为空说明该用户没有设置密码</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> mysql<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token keyword">user</span><span class="token punctuation">,</span> host<span class="token punctuation">,</span> plugin<span class="token punctuation">,</span> authentication_string <span class="token keyword">from</span> <span class="token keyword">user</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://img-blog.csdnimg.cn/50d76999d9ff47b8a1ad43b6d787796b.png" alt="image-20230102003256033" loading="lazy"></p></li><li><p>查看以下文件，将 bind-address 注释掉，这样就能允许远程主机访问 MySQL 了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/etc/mysql/mysql.conf.d/mysqld.cnf
/etc/mysql/my.cnf
/etc/mysql/mysql.cnf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://img-blog.csdnimg.cn/b18a0a40034a41b5a0e7a4b8b089937d.png" alt="image-20230102104926902" loading="lazy"></p></li></ol><br><h5 id="开放端口" tabindex="-1"><a class="header-anchor" href="#开放端口" aria-hidden="true">#</a> 开放端口</h5><ol><li><p>使用 firewall-cmd 命令开放端口（若没安装则安装 <code>sudo apt install -y firewalld</code>）：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">3306</span>/tcp <span class="token parameter variable">--permanent</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者使用 iptables 命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>iptables <span class="token parameter variable">-I</span> INPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">3306</span> <span class="token parameter variable">-j</span> ACCEPT

如果出错则用这个：iptables <span class="token parameter variable">-I</span> INPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-m</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">3306</span> <span class="token parameter variable">-j</span> ACCEPT
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>若还不行，配置文件 <code>mysql.cnf</code> 加上：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>
<span class="token assign-left variable">default_authentication_plugin</span><span class="token operator">=</span>mysql_native_password
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br><h5 id="远程访问命令" tabindex="-1"><a class="header-anchor" href="#远程访问命令" aria-hidden="true">#</a> 远程访问命令</h5><p>查看 Linux 主机的 IP 地址</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ifconfig</span>

<span class="token comment">## 十四 或者</span>

<span class="token function">ip</span> addr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>连接命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-h</span>  <span class="token number">172.18</span>.248.230 <span class="token parameter variable">-P</span> <span class="token number">3306</span> <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p123</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><h5 id="连接成功" tabindex="-1"><a class="header-anchor" href="#连接成功" aria-hidden="true">#</a> 连接成功</h5><p><img src="https://img-blog.csdnimg.cn/fb6f7df6f69441e5854c9587cdf92e4f.png" alt="image-20230102110027397" loading="lazy"></p><p><img src="https://img-blog.csdnimg.cn/5c4703494ce241a39dae66d32eb13195.png" alt="image-20230102110130489" loading="lazy"></p><p>设置 MySQL 字符编码 utf-8，可以支持中文操作</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>show variables like &quot;char%&quot;;	# 先查看 MySQL 默认的字符编码
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>set character_set_server=utf8;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改表的字符编码</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>alter table user default character set utf8;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改属性表字符编码</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>alter table user modify column name varchar(50) character set utf8;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><h3 id="redis-6-0" tabindex="-1"><a class="header-anchor" href="#redis-6-0" aria-hidden="true">#</a> Redis 6.0</h3><h4 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h4>`,44),M={href:"https://download.redis.io/releases",target:"_blank",rel:"noopener noreferrer"},K=i(`<ol><li><p>下载源码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://download.redis.io/releases/redis-6.0.0.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>编译安装</p><ul><li>PREFIX 表示安装地址</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span> <span class="token assign-left variable">PREFIX</span><span class="token operator">=</span>/usr/local/src/redis/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建软链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/src/redis/bin/redis-cli /usr/bin/redis-cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/src/redis/bin/redis-server /usr/bin/redis-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建配置文件 <code>vim redis.conf</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 把后台启动打开</span>
daemonize <span class="token function">yes</span>

<span class="token comment">## 把 bind 注释掉，打开则表示只有指定的网段才能访问 ip</span>
<span class="token comment">#bind 127.0.0.1 -::1</span>

<span class="token comment">## 设置成 no 表示允许远程访问</span>
protected-mode no

<span class="token comment"># 密码</span>
requirepass <span class="token number">123</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动 redis 服务：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>redis-server /usr/local/src/redis/redis.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>验证 redis 服务：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>redis-cli
auth <span class="token number">123</span> <span class="token comment">#密码验证</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://img-blog.csdnimg.cn/95dd708149a24ad9bd630890a6d309b8.png" alt="image-20230101120755648" loading="lazy"></p></li></ol><br><h4 id="远程连接命令" tabindex="-1"><a class="header-anchor" href="#远程连接命令" aria-hidden="true">#</a> 远程连接命令</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>redis-cli <span class="token parameter variable">-h</span> <span class="token number">172.28</span>.131.101 <span class="token parameter variable">-p</span> <span class="token number">6379</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><h4 id="设置开机自启动" tabindex="-1"><a class="header-anchor" href="#设置开机自启动" aria-hidden="true">#</a> 设置开机自启动</h4><ol><li><p>编写 <code>redisd</code> （<strong>通常都以d结尾表示是后台自启动服务</strong>）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> redisd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>redisd</code>内容如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">REDISPORT</span><span class="token operator">=</span><span class="token number">6379</span>
<span class="token assign-left variable">EXEC</span><span class="token operator">=</span>/usr/local/src/redis/bin/redis-server
<span class="token assign-left variable">CLIEXEC</span><span class="token operator">=</span>/usr/local/src/redis/bin/redis-cli
<span class="token assign-left variable">PIDFILE</span><span class="token operator">=</span>/var/run/redis_<span class="token variable">\${REDISPORT}</span>.pid
<span class="token assign-left variable">CONF</span><span class="token operator">=</span><span class="token string">&quot;/usr/local/src/redis/redis.conf&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>将 <code>redisd</code> 复制到 <code>/etc/init.d</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> redisd /etc/init.d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>让 <code>redisd</code> 取得执行权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chmod</span> +x /etc/init.d/redisd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>加载到系统自启动文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> update-rc.d redisd defaults
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>开启 <code>redisd</code> 服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start redisd

<span class="token comment">#或者使用service命令: </span>

<span class="token function">service</span> redisd start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查看 <code>redisd</code> 服务状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl status redisd

<span class="token comment">#或者使用service命令: </span>

<span class="token function">service</span> redisd status
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>显示 <code>&lt;font color=&quot;green&quot;&gt;</code>activate <code>&lt;/font&gt;</code>，则说明启动成功。</p><p><img src="https://img-blog.csdnimg.cn/e5ec77e130e449e1bd64a1be91adb5d6.png" alt="image-20230102102501869" loading="lazy"></p></li></ol><br><h4 id="redis-的一些命令" tabindex="-1"><a class="header-anchor" href="#redis-的一些命令" aria-hidden="true">#</a> Redis 的一些命令</h4><br><h3 id="mongodb" tabindex="-1"><a class="header-anchor" href="#mongodb" aria-hidden="true">#</a> MongoDB</h3>`,11),$={href:"https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-ubuntu/",target:"_blank",rel:"noopener noreferrer"},G=i(`<p>启动失败，原因是权限不够</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chown</span> <span class="token parameter variable">-R</span> mongodb:mongodb /var/lib/mongodb
<span class="token function">sudo</span> <span class="token function">chown</span> mongodb:mongodb /tmp/mongodb-27017.sock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>可查看 <code>/etc/mongodb.conf</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl status mongod
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.createUser<span class="token punctuation">(</span><span class="token punctuation">{</span>user:<span class="token string">&quot;root&quot;</span>, pwd:<span class="token string">&quot;123&quot;</span>, roles:<span class="token punctuation">[</span><span class="token string">&quot;userAdminAnyDatabase&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment"># 创建用户</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.auth<span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span>, <span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span> <span class="token comment"># 登录验证</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongo <span class="token number">172.18</span>.246.227/27017 <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> <span class="token number">123</span> <span class="token comment"># 远程连接</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>遇到依赖项的问题：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>libssl1.1 <span class="token punctuation">(</span><span class="token operator">&gt;=</span><span class="token number">1.1</span>.1<span class="token punctuation">)</span> but <span class="token number">1.1</span>.0g-2ubuntu4.1 is not installable
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解决办法：</p>`,10),X={href:"http://archive.ubuntu.com/ubuntu/pool/main/o/openssl/",target:"_blank",rel:"noopener noreferrer"},B=s("code",null,"libssl1.1_1.1.1-1ubuntu2.1~18.04.20_amd64.deb",-1),V=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> http://archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1-1ubuntu2.1~18.04.20_amd64.deb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>dpkg <span class="token parameter variable">-i</span> libssl1.1_1.1.1-1ubuntu2.1~18.04.20_amd64.deb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><h3 id="postgresql" tabindex="-1"><a class="header-anchor" href="#postgresql" aria-hidden="true">#</a> PostgreSQL</h3><br><h3 id="sqlite3" tabindex="-1"><a class="header-anchor" href="#sqlite3" aria-hidden="true">#</a> SQLite3</h3><p><code>&lt;br/&gt;&lt;br/&gt;</code></p><h2 id="十五、-容器" tabindex="-1"><a class="header-anchor" href="#十五、-容器" aria-hidden="true">#</a> 十五、 容器</h2><h3 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> docker</h3>`,10),Y={href:"https://docs.docker.com/desktop/install/ubuntu/",target:"_blank",rel:"noopener noreferrer"},Z=s("br",null,null,-1),Q=s("h3",{id:"kubenates-k8s",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#kubenates-k8s","aria-hidden":"true"},"#"),a(" Kubenates(k8s)")],-1);function J(ss,as){const n=c("ExternalLinkIcon");return t(),p("div",null,[d,s("p",null,[s("a",r,[a("适用于 Linux 的 Windows 子系统文档 | Microsoft Learn"),e(n)])]),u,s("p",null,[s("a",v,[a("参考教程"),e(n)])]),s("p",null,[s("a",k,[a("参考教程"),e(n)])]),m,s("p",null,[s("a",b,[a("主题列表"),e(n)])]),g,s("ol",null,[h,s("li",null,[f,s("p",null,[s("a",y,[a("VIM 配色方案推荐"),e(n)])])])]),x,w,s("p",null,[a("GitHub 主页："),s("a",_,[a("https://github.com/junegunn/vim-plug"),e(n)])]),s("p",null,[a("插件市场："),s("a",q,[a("https://vimawesome.com/"),e(n)])]),z,s("p",null,[a("GitHub 主页："),s("a",E,[a("https://github.com/neoclide/coc.nvim"),e(n)])]),C,s("p",null,[s("a",S,[a("Index of miniconda 清华大学开源软件镜像站"),e(n)])]),L,s("p",null,[a("PCRE 库源码包下载地址: "),s("a",I,[a("https://sourceforge.mirrorservice.org/p/pc/pcre/pcre/8.39/pcre-8.39.tar.gz"),e(n)])]),F,s("p",null,[s("a",D,[a("官网"),e(n)])]),P,s("p",null,[s("a",T,[a("libfastcommon 源码"),e(n)])]),R,s("p",null,[a("FastDFS 源代码下载地址： "),s("a",O,[a("https://code.google.com/archive/p/fastdfs/downloads"),e(n)]),s("a",A,[a("https://github.com/happyfish100/fastdfs.git"),e(n)]),a(" 这里使用的是 V6.06 版本")]),H,s("p",null,[a("spawn-fcgi 源码包下载地址："),s("a",N,[a("http://redmine.lighttpd.net/projects/spawn-fcgi/wiki"),e(n)])]),U,s("p",null,[a("fcgi 下载地址：wget "),s("a",W,[a("https://fossies.org/linux/www/old/fcgi-2.4.0.tar.gz"),e(n)])]),j,s("p",null,[s("a",M,[a("Redis 发行版下载地址"),e(n)])]),K,s("p",null,[s("a",$,[a("Install MongoDB Community Edition on Ubuntu — MongoDB Manual"),e(n)])]),G,s("p",null,[a("到这里下载"),s("a",X,[a("Index of /ubuntu"),e(n)]),a(),B]),V,s("p",null,[s("a",Y,[a("Install on Ubuntu | Docker Documentation"),e(n)])]),Z,Q])}const es=l(o,[["render",J],["__file","UbuntuConfig.html.vue"]]);export{es as default};
